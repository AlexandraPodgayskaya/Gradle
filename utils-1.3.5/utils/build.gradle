plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'maven-publish'
}

version = '1.3.5'
group = 'by.epam.util'
/*targetCompatibility = "1.8"
sourceCompatibility = "1.8"*/

publishing {
    publications {
        library(MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            url = uri("${buildDir}/publishing-repository")
        }
    }
} 
           
repositories {
    mavenCentral()
}

dependencies {

     // Use JUnit Jupiter API for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.1'

    // Use JUnit Jupiter Engine for testing.
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:30.0-jre'
    
    implementation 'org.apache.commons:commons-lang3:3.10'
}

test {
    useJUnitPlatform()
}

jar {
    archiveBaseName = 'utils'
    archiveVersion = '1.3.5'
   
    manifest {
       attributes ('Implementation-Title': project.name,
                   'Implementation-Version': project.version)
    }
}          

/*publishing{
    publications{
        maven(MavenPublication){
            groupId = project.group
            artifactId = project.name
            version = project.version

            from components.java
        }
    }
}

build.dependsOn publishToMavenLocal*/